ALTER TABLE TBL_CONTEST_QSO ADD D_ENTITY_CODE INT NULL;
ALTER TABLE TBL_CONTEST_QSO ADD D_DXCC_NOT_FOUND INT NULL;

CREATE TABLE `CAT_DXCC_ENTITY` (
  `D_ENTITY_CODE` INT NOT NULL,
  `S_ENTITY` VARCHAR(255) NULL,
  `S_CONT` VARCHAR(45) NULL,
  `D_ITU` INT NULL,
  `D_CQ` INT NULL,
  `S_ORIGEN` VARCHAR(255) NULL,
  PRIMARY KEY (`D_ENTITY_CODE`));

ALTER TABLE TBL_CONTEST_QSO ADD FOREIGN KEY (D_ENTITY_CODE) REFERENCES CAT_DXCC_ENTITY(D_ENTITY_CODE);

CREATE TABLE `CAT_DXCC_SESSION` (
  `N_ID_DXCC_SESSION` INT NOT NULL,
  `S_KEY` VARCHAR(255) NULL,
  `N_COUNT` INT NULL,
  `D_SUB_EXP` DATETIME NULL,
  `D_GM_TIME` DATETIME NULL,
  `S_REMARK` VARCHAR(255) NULL,
  `S_ERROR` VARCHAR(255) NULL,
  PRIMARY KEY (`N_ID_DXCC_SESSION`));

ALTER TABLE CAT_DXCC_SESSION MODIFY N_ID_DXCC_SESSION INT NOT NULL AUTO_INCREMENT;

CREATE VIEW V_LAST_EMAIL AS(
    SELECT
        TBL_A.EDITION_ID,
        TBL_A.EMAIL_ID,
        LOG.N_ID_CONTEST_LOG,
        TBL_A.EMAIL_SUBJECT,
        TBL_A.EMAIL_STATUS
    FROM
        TBL_CONTEST_LOG LOG
    INNER JOIN(
        SELECT
            EMAIL.S_SUBJECT EMAIL_SUBJECT,
            MAX(EMAIL.N_ID_EMAIL) AS EMAIL_ID,
            ST.S_STATUS EMAIL_STATUS,
            EDITION.N_ID_EDITION EDITION_ID
        FROM
            TBL_EMAIL EMAIL
        INNER JOIN CAT_EMAIL_STATUS ST ON
            ST.N_ID_EMAIL_STATUS = EMAIL.N_ID_EMAIL_STATUS
        INNER JOIN TBL_EDITION EDITION ON
            EDITION.N_ID_EDITION = EMAIL.N_ID_EDITION
        WHERE
            EMAIL.S_SUBJECT <> '' AND EMAIL.S_SUBJECT IS NOT NULL AND EMAIL.VERIFIED_AT IS NOT NULL AND EMAIL.ANSWERED_AT IS NOT NULL AND ST.S_STATUS = 'PARSED'
        GROUP BY
            EMAIL.S_SUBJECT,
            EDITION.N_ID_EDITION
    ) TBL_A
ON
    TBL_A.EMAIL_ID = LOG.N_ID_EMAIL
);

ALTER TABLE TBL_CONTEST_LOG ADD D_ENTITY_CODE INT NULL;
ALTER TABLE TBL_CONTEST_LOG ADD D_DXCC_NOT_FOUND INT NULL;

ALTER TABLE TBL_CONTEST_LOG ADD FOREIGN KEY (D_ENTITY_CODE) REFERENCES CAT_DXCC_ENTITY(D_ENTITY_CODE);
