server.port=8080

spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=${MYSQL_DB_URL}
spring.datasource.username=${MYSQL_DB_USERNAME}
spring.datasource.password=${MYSQL_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

log4j.logger.org.hibernate.SQL=DEBUG 
log4j.logger.org.hibernate.type=DEBUG

# uncomment this property to see the SQL statements generated
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.web=INFO
#logging.level.org.hibernate.type.descriptor.sql=TRACE
#spring.jpa.show-sql=true

logging.level.root=INFO
logging.level.com.memorynotfound=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO

#Pagination
contest.pagination.rowsperpage=10

#CRON EXPRESSIONS
#                            second, minute, hour, day of month, month, day(s) of week
cron.scanner.expression:     0       *       *     *             *      *
cron.identify.expression:    12      *       *     *             *      *
cron.parse.expression:       24      *       *     *             *      *
cron.verify.expression:      36      *       *     *             *      *
cron.responder.expression:   48      *       *     *             *      *

email.password.encodingkey=${EMAIL_PASSWORD_KEYENCODE}
email.fields.to.legth=255

amazon.creds.secretkey=${AMAZON_CRED_SECRETKEY}
amazon.creds.acceskey=${AMAZON_CREDS_ACCESSKEY}
amazon.s3.bucketname=${AMAZON_CRED_BUCKETNAME}
amazon.s3.region=us-east-1

#fileManagerImpl
file.manager.impl=${FILE_MANAGER_IMPL}

#NUMBER OF MESSAGES BY MINUTE
messages.perminute=2

# JWT
jwt.secretkey=${JWT_SECRETKEY}
jwt.token.expirationtime=${JWT_TOKEN_EXPIRATIONTIME}
jwt.issuer.info=${JWT_ISSUER_INFO}

#QRZ
qrz.username=${QRZ_USERNAME}
qrz.password=${QRZ_PASSWORD}

FMRE_CALLSIGN=XE1LM

service.region.url=http://r.radioexperimentadoresunam.mx:8090/getregionof

